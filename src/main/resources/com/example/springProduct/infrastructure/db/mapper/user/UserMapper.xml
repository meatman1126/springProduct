<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springProduct.infrastructure.db.mapper.user.UserMapper">
    <select id="findUserInfo" resultType="com.example.springProduct.infrastructure.db.dto.user.UserDto">
        SELECT user_id,user_name,login_id,password,authority_read,authority_update,authority_admin FROM users
    </select>

    <select id="findUserInfoByUserId" resultType="com.example.springProduct.infrastructure.db.dto.user.UserDto">
        SELECT user_id,user_name,login_id,password FROM users WHERE user_id = #{userId}
    </select>

    <select id="findUserInfoByLoginId" resultType="com.example.springProduct.infrastructure.db.dto.user.UserDto">
        SELECT user_id,user_name,login_id,password,authority_read,authority_update,authority_admin FROM users WHERE login_id = #{loginId}
    </select>

    <insert id="registerUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users (user_name, login_id, password)
        VALUES (#{userDto.userName}, #{userDto.loginId}, #{userDto.password})
    </insert>

    <update id="updateUser">
        UPDATE users SET
        user_name = #{userDto.userName}
        ,login_id = #{userDto.loginId}
        WHERE user_id = #{userDto.userId}
    </update>

    <select id="getLatestUserId" resultType="com.example.springProduct.domain.model.value.object.Id">
        SELECT last_insert_id() FROM users
    </select>

    <delete id="deleteUser">
        DELETE FROM users WHERE user_id = #{userId}
    </delete>


</mapper>